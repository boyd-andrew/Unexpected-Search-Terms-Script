const SHEET_URL = 'PROVIDE SHEET URL HERE'; // Insert your Google Sheet URL
const SHEET_NAME = 'Sheet or Client Name'; // Name of the tab in the spreadsheet
const ADVERTISING_CHANNEL_TYPE = "SEARCH"; 
const TIME_ZONE = "America/Los_Angeles";

function main() {
  const sheet = SpreadsheetApp.openByUrl(SHEET_URL).getSheetByName(SHEET_NAME);
  if (!sheet) {
    Logger.log(`Sheet with name "${SHEET_NAME}" not found.`);
    return;
  }

  // Get the previous month and format as "Month Year"
  const lastMonthDate = new Date();
  lastMonthDate.setMonth(lastMonthDate.getMonth() - 1);
  const monthYear = Utilities.formatDate(lastMonthDate, TIME_ZONE, "MMMM yyyy");

  // Define date range for last month
  const firstDayOfMonth = Utilities.formatDate(lastMonthDate, TIME_ZONE, "yyyy-MM-01");
  const lastDayOfMonth = Utilities.formatDate(lastMonthDate, TIME_ZONE, "yyyy-MM-") + daysInMonth(lastMonthDate);

  // Clear sheet and set headers
  sheet.clear();
  sheet.getRange(1, 1, 1, 9).setValues([
    ['Month-Year', 'Campaign Name', 'Ad Group Name', 'Keyword', 'Search Term', 'Clicks', 'Spend', 'Cost/Click', 'Conversions']
  ]);
  sheet.getRange(1, 1, 1, 9).setFontWeight('bold').setBackground('#4CAF50').setFontColor('white');

  // **Optimized Query to Fetch All Relevant Data at Once**
  const query = `
    SELECT
      campaign.name,
      ad_group.name,
      segments.keyword.info.text,
      search_term_view.search_term,
      metrics.clicks,
      metrics.cost_micros,
      metrics.conversions
    FROM
      search_term_view
    WHERE
      metrics.cost_micros > 0
      AND segments.date BETWEEN '${firstDayOfMonth}' AND '${lastDayOfMonth}'
      AND campaign.advertising_channel_type = '${ADVERTISING_CHANNEL_TYPE}'
  `;

  const report = AdsApp.report(query);
  const rows = report.rows();
  const data = [];

  // **Process Data Efficiently**
  while (rows.hasNext()) {
    const row = rows.next();
    const keywordText = row['segments.keyword.info.text'].toLowerCase().split(" ");
    const searchTerm = row['search_term_view.search_term'].toLowerCase();
    
    const cost = row['metrics.cost_micros'] / 1e6; // Convert micros to standard currency
    const clicks = row['metrics.clicks'];
    const costPerClick = clicks > 0 ? cost / clicks : 0;

    // **Check if search term contains any keyword words**
    const searchTermWords = searchTerm.split(" ");
    const hasMatchingWord = searchTermWords.some(word => keywordText.includes(word));

    // **Log only if no words from the keyword match the search term**
    if (!hasMatchingWord) {
      data.push([
        monthYear,
        row['campaign.name'],
        row['ad_group.name'],
        row['segments.keyword.info.text'],
        row['search_term_view.search_term'],
        clicks,
        cost,
        costPerClick,
        row['metrics.conversions']
      ]);
    }
  }

  // **Write Data to Google Sheet**
  if (data.length > 0) {
    sheet.getRange(2, 1, data.length, data[0].length).setValues(data);
    formatSheet(sheet, data.length);
    Logger.log(`Script completed: ${data.length} rows written.`);
  } else {
    Logger.log("No data available for the specified period.");
  }
}

// **Formats Sheet for Readability**
function formatSheet(sheet, numRows) {
  sheet.getRange(2, 7, numRows, 1).setNumberFormat("$#,##0.00");
  sheet.getRange(2, 8, numRows, 1).setNumberFormat("$#,##0.00");
  sheet.getRange(2, 6, numRows, 1).setNumberFormat("#,##0");
  sheet.getRange(2, 9, numRows, 1).setNumberFormat("#,##0");

  const range = sheet.getRange(2, 1, numRows, 9);
  const banding = range.applyRowBanding(SpreadsheetApp.BandingTheme.LIGHT_GREY);
  banding.setFirstRowColor('#f0f0f0').setSecondRowColor('#ffffff');

  sheet.getRange(2, 1, numRows, 9).sort({ column: 7, ascending: false });
}

// **Gets the Number of Days in a Given Month**
function daysInMonth(date) {
  return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();
}
